[
  {
    "title":"Serverless JSON Web Token Authentication on Amazon Web Services",
    "date":"June 13 2016",
    "body":"<h2>Serverless App with JWT Authentication</h2><p>The folks at AWS say you can create a serverless and scalable webap using DynamoDB, Lambda, API Gateway, and S3. Let's try it.</p><h3>The Database</h3><p>Creating some tables in DynamoDB is pretty straight forward. You get to pick your primary key with the opotion for a secondary key. Scans over those fields are indexed and will be fast.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/dynamodb-admin.png\" alt=\"DynamoDB Admin Page\"/><p>You can put any JSON formatted object into DynamoDB as long as it has your primary key (and your secondary key if you choose to use one).</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/dynamodb-item-text.png\" alt=\"DynamoDB Item in Plain Text\"/><h3>The Code</h3><p>The \"serverless\" code runs on AWS Lambda. Lambda allows a developer to upload an artifact as a lambda function. When the function is called, a virtual machine boots up and runs the code. I chose Python as my language, but Node.js and Java are also available. From what I am told, Python is the fastest to boot up and Java is the slowest.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/lambda-admin-simple-code.png\" alt=\"Lambda Admin Simple Function Code\"/><p>Very simple lambda functions can be written inline using the AWS gui.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/lambda-admin-zip-code.png\" alt=\"Lambda Admin Function Zip Code\"/><p>More complex functions that include external modules will need to be zipped up and uploaded either through the gui or using S3.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/lambda-admin-configuration.png\" alt=\"Lambda Admin Function Configuration\"/><p>When configuring a Lambda function, you will need to give it an IAM role with perms to access the other AWS as desired.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/iam-admin-configuration.png\" alt=\"IAM Admin Role Configuration\"/><p>I this case, I want my function to be able to write to the log stream. I want everything to have this ability. Log-less debugging is not fun. I also want my function to have read/write permissions to DynamoDB.</p><h3>The API</h3><p>API Gateway allows you to expose your lambda functions via a REST api.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/apigateway-admin-create-resource.png\" alt=\"API Gateway Adming Create Resource\"/><p>To expose a REST method, you first must create a new api resource.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/apigateway-admin-create-method.png\" alt=\"API Gateway Admin Create Method\"/><p>Once you have your resource, create a new method for that resource. Choose your method verb such as GET or POST. Then, configure your integration type to be a Lambda Function.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/apigateway-enable-cors.png\" alt=\"API Gateway Enable CORS\"/><p>In order to hit your API from the frontend domain, the api has to allow Cross Origin Recourse Sharing or CORS. API Gateway makes this very easy. Simply select your resource, then use the Actions dropdown to select Enable CORS. On the next page, just hit the big blue button that says \"Enable CORS and replace existing CORS headers\". When you do this, an OPTIONS method will be added to your resource. The serves as a 'pre-flight' verification step for the other methods. The response headers on the OPTIONS method will tell the client the acceptable origins and request headers for the other methods. <mark>NOTE: If you use the caching feature on the API Gateway, be aware that the cache is recource specific, not resource AND method specific. So with a cache of 2 seconds on the API and a POST coming from a modern browser, the browser will first hit the resource with an OPTIONS method. Then, the browser will attempt the POST. The POST will have the same reponse data as the OPTIONS request as it will hit the cache.</mark> I lost about 5 hours due to this little gotcha.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/apigateway-admin-custom-authorization.png\" alt=\"API Gateway Admin Custom Authorization\"/><p>The API Gateway has a very cool custom authorization feature. Any method can be configured to authenticate using custom code. The 'Authoriztion' header is sent to a Lambda function of your choosing. The Lambda function is expected to return a valid IAM policy. This policy is used to determine if the user has access to the method or not.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/apigateway-stage-configuration.png\" alt=\"API Gateway Stage Configuration\"/><p>Once your api is created and configured, create a deployment stage and deploy it.</p><h3>The Front-End</h3><p>Creating a static webiste in S3 is pretty common place and highly documented, so I won't go into it much here.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/s3-admin-static-website-configuration.png\" alt=\"S3 Admin Static Website Configuraton\"/><p>But, you will want to set up an S3 bucket as a static website with permissions for everybody to view it. Then, you will want to use Route53 to map your domain name to the bucket.</p><p>The front end will need to run completely on the client side. It is a purly static website. All code will be either in Lambda functions or Javascript.</p><h2>Authentication</h2><p>So, that was a long preamble. Now let's discuss authentication using JSON Web Tokens.</p><h3>Sign up</h3><img src=\"blog-post/serverless-jwt-authentication-on-aws/signup-html.png\" alt=\"Signup HTML\"/><p>The above code is the html for the signup form. You can see that a username, password, name are being added to the ng-model.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/signup-js.png\" alt=\"Signup JavaScript\"/><p>The angular code creates a post to the API Gateway to create a new user.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/signup-py.png\" alt=\"Signup Lambda\"/><p>The above Lambda function is envoked on the JSON object from the form. The password is hashed and inserted into the DynamoDB table.</p><h3>Login</h3><img src=\"blog-post/serverless-jwt-authentication-on-aws/login-html.png\" alt=\"Login HTML\"/><p>The HTML for the login is a dropdown form for login that is visible when there is no user in local storage on the browser and a dropdown logout button that is visible when there is a user in local storage.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/login-js.png\" alt=\"Login JavaScript\"/><p>The login function posts the user credentials to the API Gateway that returns a JSON Web Token. The jwt is stored in the browser local storgae using the 'UserService' that relies on the 'store' package from the 'angular-store' library. The logout function simply sets the current user in the local storage to 'null'.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/login-py.png\" alt=\"Login Lambda\"/><p>The Lambda function compares the incoming passowrd to the hashed passowrd by applying the same hash to the incoming password before comparing. If the password is a match for the given user name, a valid JSON Web Token is returned.</p><h3>Post a Message</h3><img src=\"blog-post/serverless-jwt-authentication-on-aws/message-html.png\" alt=\"Message HTML\"/><p>The HTML displays the most recent 20 posts and a button with a modal form for posting a message.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/message-js.png\" alt=\"Message JavaScript\"/><p>The controller gets the message from the API when the page opens and loads them into scope. It also opens and closes the modal form and posts the new messages to the API.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/message-py.png\" alt=\"Message Lambda\"/><p>The Lambda code is trivial and simply inserts the new record into the DynamoDB.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/interceptor-js.png\" alt=\"Interceptor Javascript\"/><p>There is an app-wide interceptor that can manipulate request before they are sent. In this case it will add the Authentication header to all requests if there is a logged in user.</p><img src=\"blog-post/serverless-jwt-authentication-on-aws/authorizer-py.png\" alt=\"Authorizer Lambda\"/><p>The message POST method has been configured to call the 'authorizer' Lambda function on each request before proceeding. The returned object is a valid IAM Policy that the API Gateway uses to determine if it should returna  '401 Not Authorized' or run the linked Lambda function. The function itself takes the JSON Web Token to validate the user. If everything checks out, the function returns an IAM Policy giving permission to POST to the given route.</p><h2>External Resources</h2><p><a href=\"http://cudas.org\">The site</a href=\"https://github.com/austindlawless/cudas\"></p><p><a>The code</a></p>",
     "preview":"<p>Serverless JSON Web Token Authentication on Amazon Web Services</p>",
     "url":"serverless-jwt-authentication-on-aws"
  },
  {
    "title":"God the Father",
    "date":"Oct 24 2014",
    "body":"<h2>God The Father<\/h2><h3>What is He?<\/h3><p>He is a spirit being - not flesh and blood. John 4:24<\/p><p>He is eternal - uncreated. Psalm 110:2, Genesis 1:1<\/p><p>He is holy. Revelation 4:8, John 17:11<\/p><p>He is good. Psalm 136:1<\/p><p>He is just. Acts 17:31<\/p><p>He is unchanging. Psalm 102:25-27, Isaiah 46:10, Hebrews 6:17, James 1:17<\/p><p>He is wise. Psalm 147:5<\/p><p>He is true. Hebrews 6:18<\/p><p>He is merciful. Exodus 24:6-7<\/p><p>He is faithful - trustworthy. 1 Corinthians 1:9<\/p><p>(Much of the above is not exclusive to the Father.)<\/p><h3>Where is He?<\/h3><p>He is in heaven seated on His throne. (Spoiler alert: Jesus is at his right hand, interceding - praying - on our behalf. Feels good doesn't it.) Luke 22:69, Mark 16:19, Romans 8:34<\/p><h3>Who is He?<\/h3><p>He is the Father part of the Triune God. I do not think that our minds can comprehend the Trinity. I think it is safe to say that there is no earthly explanation of the concept. Things we state as facts about God seem to be mutually exclusive: God is one. God the Father, Son and Spirit. Suffice to say, it is confusing. Moving on.<\/p><h4>We call him Father. Why?<\/h4><p>Jesus called him Father. Mark 14:36<\/p><p>Jesus told us to call him Father. Mathew 6:9-13<\/p><h4>What does it mean for Him to be the Father?<\/h4><p>In order to be a Father, one must have a son (or daughter, but in this case son). It is a relational title that requires a counter person, again the Son. The Father did not begat, birth or create the Son. God is unchanging. He has always been a Father/Son/Spirit relationship. The Father did not become the Father. He is the Father.<\/p><p>Mathew 11:27, Genesis 1:26<\/p><h3>What does He do?<\/h3><p>He is the decision maker for the Trinity. His will is carried out by the Son and the Spirit. Apparently the God-persons do not share a knowledge space - I told you it is confusing. Only the Father knows when he will send the Son back to Earth.<\/p><p>Mathew 24:36, Luke 22:42, John 14:26, John 6:39, John 12:49-50, John 5:19, John 5:30, John 14:31<\/p><h3>Discussion Questions<\/h3><p>What is your favorite aspect of the Father? Why?<\/p><p>Which aspects of the Father are most difficult for you to believe or understand? Why?<\/p><p>What are some false beliefs about the Father that you see in the secular - non-Christian - world?<\/p><p>To whom should we pray? Why?<\/p><p>Brain Teaser: Hilary's felicitous paradox: &quot;The Father is the greater without the Son being the lesser.&quot;<\/p>",
     "preview":"<p>God The Father<\/p><p>What is He?<\/p><p>He is a spirit being - not flesh and blood. John 4:24<\/p>",
     "url":"god-the-father"
  },
	{
    "title":"Big Bend",
    "date":"April 11 2016",
    "body":"<img class=\"main-image\" src=\"blog-post/big-bend/south-rim-sunset-pano.jpg\" alt=\"south-rim-sunset-pano\"\/><h2>Food and Water<\/h2><p>My brother Abe, some friends of ours, and I like to do at least one adventure per year. This year ended up including Tyler and Chris. The idea of doing the Outer Mountain Loop inspired the destination of Big Bend. But after doing some research, we realized that since you can't reserve sites in advance at Big Bend - for some unknown reason - we'd have to just show up and be flexible. Also, we called and spoke to a park ranger. He thought that it would be a bad idea to do the loop and that we should stay in the Chisos Mountains. Spoiler alert: he was right. So, the plan was simple: show up with enough food and water for 4 days and see what happens.<\/p><p>Speaking of food and water... Planning food for a backpackig trip is very different than planning water. Water is easy to plan. Take the number of days on the trail times 4 and you have the number of liters you'll need. Carrying water - not so easy.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/meals.png\" alt=\"meals\"\/><p>Food, as you can see above, takes a little more planning. I recently learned about bringing olive oil to add to my freeze dried meals. I must say, it is quite nice and a huge calorie per oz winner at 240. Also, GORP stands for \"good old raisins and peanuts\". But, my GORP was actually pumpkin seeds, pestachios, cashews, peanuts, and pecans.<\/p><h2>Gear<\/h2><img class=\"blog-image\" src=\"blog-post/big-bend/gear.jpg\" alt=\"gear\"\/><ul><li>Pack - REI Flash 65<\/li><li>Sleeping Bag - REI Halo 25<\/li><li>Pad - REI Ari Rails<\/li><li>Pillow - Exped Air Pillow (I love this pillow.)<\/li><li>Sleeping bag-pad straps (so money)<\/li><li>Tent - MSR Mutha Hubba (we had 3 in the tent and one in a bivy)<\/li><li>Water bottle - 1L Nalgene<\/li><li>Bladder - 2L CamelBak<\/li><li>Reservoirs - 10L & 6L MSR Domedary<\/li><li>Headlamp - Petzl Tikka<\/li><li>Boots - Asolo Avalon GXT<\/li><li>Socks - REI Wool Hiking Socks (4 pair)<\/li><li>Shorts<\/li><li>Undies - UnderArmor Boxer Briefs (4 pair)<\/li><li>Shirts - Smart Wool (short sleve x1, long sleeve x2)<\/li><li>Knit cap<\/li><li>Jacket - Patagonia Down Sweater<\/li><li>Warm pants - North Face micro-fleece<\/li><li>Rain jacket - Marmot Gortex shell<\/li><li>Rain pants - REI something (too heavy, I need to get something lighter)<\/li><li>Sunglasses<\/li><li>Tevas<\/li><li>First aid kit<\/li><li>Sun screen<\/li><li>Toothbrush<\/li><li>Toothpaste<\/li><li>Lip balm<\/li><li>Ibuprofen<\/li><li>Compass<\/li><li>Knife<\/li><li>Topo map<\/li><li>Paracord<\/li><li>Toilet paper<\/li><li>Trowel<\/li><li>Pack cover<\/li><li>Stool - aluminum tri-pod<\/li><li>Sierra cup<\/li><li>Spork<\/li><li>Coffee mug<\/li><li>Pot - 1L REI TiWare<\/li><li>Stove - MSR Pocket Rocket<\/li><li>Fuel<\/li><li>Matches - in waterproof container<\/li><li>Day pack - CamelBak (too bulky, next time I will bring something like the REI Flash 15)<\/li><li>Stuff sacks - food, cloths, pad, bag, pillow, pot<\/li></ul><h2>Day One - The Window<\/h2><p>We hit the road at 4:30a. By the time the sun was up, we were already a little delirious.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/hit-the-road-wide.jpg\" alt=\"hit-the-road\"\/><p>We got to the park and headed straight to Panther Junction to try to get our backcountry permit. It was 2p by this point, and we had to settle for a car camping site in the Chisos Basin. It could have been worse.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/first-site-afternoon.jpg\" alt=\"first-site-afternoon\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/first-site-morning-austin.jpg\" alt=\"first-site-morining-austin\"\/><p>As you can see, the Chisos Basin is spectacular - in the afternoon or in the morning. After we set up camp, we hiked down the famous \"Window Trail\". It is not a secluded trail. We saw many other hikers. But with a rumbling storm in the distance, it was quite the experience. The window itself is very interesting. The rock is worn extremely smooth and is very slick. My palms start to sweat just thinking about being in it. It seemed that at any moment I might start a slide that would end in a 200 foot fall. But, it also seemed like a good spot to have a snack - just not too close to the edge.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/window-snack.jpg\" alt=\"window-snack\"\/><p>Then we headed back to camp. We got about 5 minutes of sparse but heavy rain drops as a cold front came through while we made dinner. But other than that, the front only brought cooler weather and a night of wind.<\/p><h2>Day Two - Emory Peak<\/h2><p>We woke up with the sun the next morning, quickly climbed into the car and scooted over to Panther Junction to be the first campers in line for backcountry permits. It was worth it. After startling the nice park ranger when she unlocked the door to open for business, we were able to score primitive sites for the next two nights, the second night being on the South Rim. So, we drove back to camp to pack up and head to the trailhead.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/pinnacles-trail-sign.jpg\" alt=\"pinnacles-trail-sign\"\/><p>We started that cold, cloudy-morning hike on the Pinnacles Trail. We had to carry all of our water and our packs were heavy that day. Let's just say it was a good day for a steep ascent. Really though, it was a climb, but nothing extraodinary. It was a short hike - up through the pass between Toll Mountain and Emory Peak - with many built-in breaks to stop and take a picture and/or admire a view.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/pinnacles-trail-group.jpg\" alt=\"pinnacles-trail-group\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/boot-canyon-group.jpg\" alt=\"boot-canyon-group\"\/><p>After the pass, we cruised down into Boot Canyon to our site - BC4. Here we made camp, grabbed a nap in the sunshine, ate some snacks, and tossed the disc.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/second-site-disc-austin.jpg\" alt=\"second-site-disc-austin\"\/><p>Refueled and rested, we grabbed our daypacks and headed back out of Boot Canyon and up Emory Peak. The trail goes almost all the way to the summit. There is a mild climb to get the last 50 ft or so to the top. Once on top, you can see beautiful desert mountains in every direction for miles. We had about 45 minutes to sunset, so we hunkered down to get some protection from the desert sun and wait it out with our new compadres. There were 7 others on top of EP (Emory Peak) with us as well as some radio antennas and what appeared to be a solar powered cellular antenna.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/emory-peak-group-chilling.jpg\" alt=\"emory-peak-group-chilling\"\/><p>The sun set slowly as we soaked up the desert views and even caught a glimpse of the rare Colima Warbler while waiting out the sunset on the peak.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/emory-peak-austin-chris-sunset.jpg\" alt=\"emory-peak-austin-chris-sunset\"/><img class=\"blog-image\" src=\"blog-post/big-bend/emory-peak-abe-sunset.jpg\" alt=\"emory-peak-abe-sunset\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/emory-peak-brothers-sunset-dark.jpg\" alt=\"emory-peak-brothers-sunset-dark\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/emory-peak-austin-sunset-dark.jpg\" alt=\"emory-peak-austin-sunset-dark\"\/><p>By the time the sun was down, most of our new friends had all headed back to their respective camps. The holdouts were the two fellas from the Great North West and our foursome. After the sun was down, Tyler and Chris headed back to camp to get some dinner and get ready for bed. Abe and I waited for some stars. We got a lot of moon. We were also visited by some creatues of the night. Our first guest on the summit was a little mouse. He was shortly followed by a ring-tailed cat.<\/p><p>Once dusk transitioned to night, Abe and I enjoyed the rare moonlit mountain descent and hike back to camp - headlamps present but not employed. We cruised down the mountain only occasionally breaking stride to navigate a shadowy portion of trail. Once back to camp, we rushed through dinner and hopped into our bags to get some sleep.<\/p><h2>Day Three - The South Rim<\/h2><p>With a short hike upcoming, we slept in and relaxed in the morning. It was strange to wake up at 9am on a backpacking trip. The night before was clear and calm, so Tyler decided to sleep under the stars. <\/p><img class=\"blog-image\" src=\"blog-post/big-bend/second-site-morning.jpg\" alt=\"second-site-morning\"\/><p>After a brief hike out of Boot Canyon, we made it to the South Rim trail. It is famous for a reason.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-morning-group.jpg\" alt=\"south-rim-morning-group\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-morning-abe-dropoff.jpg\" alt=\"south-rim-morning-abe-dropoff\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-morning-slope.jpg\" alt=\"south-rim-morning-slope\"\/><p>The sun started to burn through the clouds as we set up our final camp at site SW3.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/third-site-afternoon-tyler.jpg\" alt=\"third-site-afternoon-tyler\"\/><p>After resting, snacking, and tossing the disc a little, we decided to get in another day hike - the Colima trail. The sun was brutal - in our face out and back due to poor timing. Thankfully we did get some new looks at Emory Peak. Also, we were able to familiarize ourself with the part of the trail that we would start in the dark the next morning. Once back at camp, we went ahead and ate dinner so we could get to bed right after exploring the rim.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/colima-trail-abe.jpg\" alt=\"colima-trail-abe\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/colima-trail-austin-tyler.jpg\" alt=\"colima-trail-austin-tyler\"\/><p>In hindsight, we should have skipped the Colima trail, gone straight back to the South Rim, and made dinner out there. Thankfully we did eventually make it back to the rim about an hour before sunset. We took most of that hour to slowly explore the ledges and take in the vews. Once we found a good spot, we settled in for another epic sunset.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-afternoon-abe.jpg\" alt=\"south-rim-afternoon-abe\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-afternoon-austin-dropoff.jpg\" alt=\"south-rim-afternoon-austin-dropoff\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-afternoon-chris.jpg\" alt=\"south-rim-afternoon-chris\"\/><p>Seriously, the rim is incredible. By this point it was Sunday afternoon. I don't think there were many people left in the park, let alone all the way out on the rim. When we weren't talking and the wind stopped, it was completely silent. No sound. Nothing.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-sunset-chris.jpg\" alt=\"south-rim-sunset-chris\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-sunset-austin.jpg\" alt=\"south-rim-sunset-austin\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-sunset-abe.jpg\" alt=\"south-rim-sunset-abe\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-sunset-abe-austin-tyler.jpg\" alt=\"south-rim-sunset-abe-austin-tyler\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/south-rim-sunset-austin-dark.jpg\" alt=\"south-rim-sunset-austin-dark\"\/><p>We once again stayed out till the sun was gone, the moon was high and the stars were out. And once again, the hike back did not require added light. Once back at camp, we wasted no time settling into the tent and getting to bed.<\/p><h2>Day Four - Let's Go Home<\/h2><p>Early to rise - the alarm went off at 5:30a. We wanted to break camp and hit the trail before sunrise to get to the car as soon as possible. Both Chris and Tyler planned to be at work early the next day. We didn't want to get a late start on our long car ride. But as we were about to hit the trail, we noticed the nearly full moon about to set over... the South Rim. We dropped our packs and quietly sipped our coffee as we watched this new-to-us-concept of a moon-set behind the desert mountains.<\/p><p>After the weekend we'd had, there wasn't much worth stopping for on the hike out, but we did snag a few pictures; including one where I was unaware that Tyler was trying to hold my hand.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/meadows-trail-morning-abe-austin.jpg\" alt=\"meadows-trail-morning-abe-austin\"\/><img class=\"blog-image\" src=\"blog-post/big-bend/meadows-trail-morning-austin-tyler.jpg\" alt=\"meadows-trail-morning-austin-tyler\"\/><p>Once back at the car, we changed into some fresh clothes. This did not prevent the car ride back from being a little funky, though. On the drive out of Big Bend, we saw a mountain lion cross the road about 3/4 of a mile in front of us. Funk and mountain lion aside, we made it home safely after an unforgettable adventure.<\/p><img class=\"blog-image\" src=\"blog-post/big-bend/sign-group.jpg\" alt=\"sign-group\"\/><h2>Final Thoughts<\/h2><p>In case it isn't obvious, I highly recommend Big Bend - particularly the Chisos Mountains. Temperatures can vary widley, so plan accordingly. I wasn't sure if I needed my warm clothes when I packed them, but I am very glad I had them. I was also very glad I had my Tevas. It was nice to be able to change out of my boots even if the hikes weren't very long. If you visit, try to hit both Emory Peak and the South Rim - at sunset if you can. If you don't have a bright moon, the climb/hike down EP could be a little dicey, though. Heed the warning on any dehydrated meals to remove the oxygen absorber before adding the hot water. Come with a flexible plan, site availablity is unpredictable. Don't bother bringing your hammock, they are outlawed in the Chisos Mountains. Know that the bear boxes were not rodent proof for us. Though even after careful inspection, we we have no idea how the box was breached. Enjoy the beautiful desert.",
     "preview":"<p>Memories seared into my brain.<\/p>",
     "url":"big-bend"
   },
  {
    "title":"Bible Study Template",
    "date":"March 11 2015",
    "body":"<h2>Observations<\/h2><p>First, make some observations. What does the passage say? Possibly things that are emphasized or repeated. (Quick short statements.)<\/p><h2>Interpret<\/h2><p>Now we need to interpret what we've read. What does the passage mean? Look at cross references. Study the culture. Draw conclusions as to the meaning of the passage. Use the observations if they are helpful, but it is not required. What are one to three main interpretations from this passage?<\/p><ol><li>Thematize your interpretation.<\/li><li>Explain your interpretation.<\/li><li>Prove your interpretation.<\/li><\/ol><h2>Tone<\/h2><p>How does the passage make me feel? Look for the emotion of the passage.<\/p><h2>Application<\/h2><p>This is the goal of all the studying we've done up to this point. What do we do?<\/p><ol><li>How does the truth revealed here affect my relationship with God?<\/li><li>How does the truth revealed here affect my relationship with others?<\/li><li>How does the truth revealed here affect me?<\/li><li>How does the truth revealed here affect my response to Satan?<\/li><\/ol>",
     "url":"bible-study-template"
   },
  {
    "title":"Configuring TinyMCE Styles in dotCMS",
    "date":"June 11 2015",
    "body":"<p>It is common practice to use CSS classes to format content. With some configuration, the TinyMCE WYSIWYG editor can empower non-code level users to keep with this practice. The styles-dropdown (pictured below) can be populated with a list of classes that can be applied to text in the editor using a span.<\/p><p><img src=\"blog-post/configuring-tinymce-styles-in-dotcms/tinymce-menu.png\" width=\"1000\" height=\"87\" alt=\"TinyMCE WYSIWYG Menu Bar\" title=\"TinyMCE WYSIWYG Menu Bar\" \/><\/p><p>By default the TinyMCE WYSIWYG editor in dotCMS includes the styles-dropdown but it is empty. In order to configure TinyMCE beyond the default install for dotCMS, the plugin needs to be installed to our static-plugin directory. Directions form dotCMS to do that are available <a href=\"http://dotcms.com/docs/latest/controlling-tinymce-wysiwyg\" title=\"Enable TinyMCE Custom Configuration in dotCMS\" target=\"_blank\">here<\/a>.<\/p><p>With that out of the way, let's get to configuring some styles!<\/p><p>We will be modifying two of the files from the TinyMCE plugin: 'tiny_mce_config.jsp' and 'plugin.properties'.<\/p><h3>Updates to 'tiny_mce_config.jsp':<\/h3><p>There is a section of code as follows:<\/p><pre><code>&lt;% \/*Set the WYSIWYG BLOCK FORMATS*\/<br \/>&nbsp; String blockformats =APILocator.getPluginAPI().loadProperty(\"org.dotcms.tinymce_extended\", \"WYSIWYG_BLOCKFORMATS\");<br \/>&nbsp; if(UtilMethods.isSet(blockformats)){<br \/>&nbsp; %&gt;<br \/>&nbsp; &lt;%=\"theme_advanced_blockformats : \"\"+blockformats+\"\",\"%&gt;<br \/>&nbsp; &lt;%<br \/>&nbsp; }else{<br \/>&nbsp; %&gt;<br \/>&nbsp; &lt;%=\"theme_advanced_blockformats : \"p,div,h1,h2,h3,h4,h5,h6,blockquote,dt,dd,code,samp,pre\",\"%&gt;<br \/>&nbsp; &lt;%<br \/>&nbsp; }<br \/>%&gt;<\/code><\/pre><p>We are going to use this code as a model for how our styles-dropdown will be populated. Replace the 'blockformats' references with 'styles' and update the default string with a list of classes like:<\/p><p><code>\"content,nav,footer,subHeader\",<br \/><\/code><\/p><p>Or for a prettier list in the dropdown:<\/p><p><code>\"Content=content;Nav=nav;Footer=footer;Sub Header=subHeader\",<br \/><\/code><\/p><p>Even an empty list is fine because the property in the next file will override whatever we put as the default. The final product should look something like this:<\/p><pre><code>&lt;% \/*Set the WYSIWYG STYLES*\/<br \/>&nbsp; String styles =APILocator.getPluginAPI().loadProperty(\"org.dotcms.tinymce_extended\", \"WYSIWYG_STYLES\");<br \/>&nbsp; if(UtilMethods.isSet(styles)){<br \/>&nbsp; %&gt;<br \/>&nbsp; &lt;%=\"theme_advanced_styles : \"\"+styles+\"\\\",\"%&gt;<br \/>&nbsp; &lt;%<br \/>&nbsp; }else{<br \/>&nbsp; %&gt;<br \/>&nbsp; &lt;%=\"theme_advanced_styles : \"\\\",\"%&gt;<br \/>&nbsp; &lt;%<br \/>&nbsp; }<br \/>%&gt;<\/code><\/pre><p>Now we need to update the 'plugin.properties' file to include our custom styles.<\/p><h3>Updates to 'plugin.properties':<\/h3><p>We will again use the 'blockformats' configuration as a guide. It looks like this:<\/p><pre><code>&#x23;specify the theme blockformats the wysiwyg should use<br \/>&#x23;if is not set by default use this blocksformats: \"p,div,h1,h2,h3,h4,h5,h6,blockquote,dt,dd,code,samp,pre\" <br \/>WYSIWYG_BLOCKFORMATS=p,div,h1,h2,h3,h4,h5,h6,blockquote,dt,dd,code,samp,pre<br \/><\/code><\/pre><p>The resulting 'styles' section looks like this:<\/p><pre><code>&#x23;specify the theme styles the wysiwyg should use<br />&#x23;if is not set the default is: \"\"<br \/>WYSIWYG_STYLES=Content=content;Nav=nav;Footer=footer;Sub Header=subHeader<\/code><\/pre><p>Now when we restart the server, the TinyMCE WYSIWYG editor will have a populated styles-dropdown that will apply &lt;span class=\"style\"&gt;...&lt;\/span&gt; to our content that can be formatted using our normal CSS file for our site.<\/p>",
     "url":"configuring-tinymce-styles-in-dotcms"
   },
  {
    "title":"God the Spirit",
    "date":"November 29 2014",
    "body":"<h3>Holy Spirit Overview<\/h3><p><img src=\"blog-post/god-the-spirit/trinity_diagram.png\" width=\"300\" height=\"271\" alt=\"trinity_diagram\" title=\"trinity_diagram\" \/><\/p><p>Triune and how the Holy Spirit is part of that Trinity exists in 3 statements:<\/p><ol><li><p>One God- Isaiah 44:6 \"I am the first, and I am the last; and beside me there is no God.\"<\/p><\/li><li><p>Father, Son, and Holy Spirit is God- 1 Corinthians 2:10 tells us that the Holy Spirit has the attributes of God- \"The Spirit searches all things, even the deep things of God.\"<\/p><\/li><li><p>Each part of God is distinct from the other- Jesus points out how they are all different from each other in John 14:23 Anyone who loves me will obey my teaching. My Father ￼will love them, and we will come to them and make our home with Deuteronomy 30:6 Jesus them.<\/p><\/li><\/ol><p>Jesus designates all three Persons of the Trinity in Matthew 28:19- \"Go therefore and make disciples of all the nations, baptizing them in the name of the Father and the Son and the Holy Spirit.\"<\/p><h3>The Holy Spirit Before Jesus descended to Earth<\/h3><p>Before Jesus the Spirit could come and go from people.<\/p><h4>Where was He?<\/h4><p>The Spirit was everywhere and enveloped everything. - Genesis 1:2<\/p><h4>What did He do?<\/h4><p>Regeneration, “rebirth” from which we get the concept of￼being “born again” - Deuteronomy 30:6, Ezekiel 11:19-20, Ezekiel 36:26-27<\/p><p>Indwelling, coming upon people or filling them up - Numbers 27:18, 1 Samuel 16:12-13 1 Samuel 10:10, 1 Samuel 16:14 Micah 3: 8-12<\/p><p>Empowerment for service – Exodus 31: 1-11<\/p><h3>The Holy Spirit While Jesus Walked the Earth<\/h3><h4>Where was he?<\/h4><p>During Jesus the Spirit filled Jesus and never left Him<\/p><h4>What did he do?<\/h4><p>Intervention (Mary’s conception) - Matthew 1: 18, Luke 1:35<\/p><p>Infusion (baptism) - Matthew 3:16, Mark 1: 9-11<\/p><p>How Holy Spirit walked with Jesus all the way through His death and resurrection (Holy Spirit strengthened, counseled, and walked beside Christ through it all.) - Mark 1:12-13, Luke 4:1, Luke 4:14, Luke 10:21, Matthew 12:28, Acts 10:38, Matthew 27:50<\/p><h3>The Holy Spirit After Jesus Ascended from Earth<\/h3><h4>Where is He?<\/h4><p>The New Testament teaches the permanent indwelling of the Holy Spirit in believers. When we place our faith in Christ for￼salvation, the Holy Spirit comes to live within us. Jesus promised the Holy Spirit as a helper to come along side us. - John 14:26, Acts 1:8<\/p><h4>What does He do?<\/h4><p>The Holy Spirit filled the believers starting at Pentecost. - Acts 2: 1-4<\/p><p>The Holy Spirit fills us and walks with us today. - 1 Corinthians 3:16-17, 1 Corinthians 6:19-20, Ephesians 1:13-14<\/p><p>The Holy Spirit intercedes for us in our prayers. - Romans 8:26<\/p><p>The Holy Spirit is responsible for the work of the new creation as He is bringing people into the kingdom of God through￼regeneration (“rebirth”). - 2 Corinthians 5:17<\/p><h3>Discussion Questions:<\/h3><p>1) When do we 1st see the HS arrive?<br \/> 2) What was the role of the HS in the Old Test? How was that important?<br \/> 3) What is the role of HS in New Test? How is that important?<br /> 4) What void would there be if the HS didn't exist.?<br /> 5) Have you ever felt the HS/ have you ever experienced the HS?<br \/> 6) Once Christ returns what role (what need do we have?) does the HS play?&nbsp;<\/p>",
     "url":"god-the-spirit"
   },
  {
    "title":"DotCMS Backup and Restore",
    "date":"November 12 2014",
    "body":"<p>So, a medium AWS server is about $50 / month. That is a little steep. So, I needed to back up dotCMS and restore it to a micro server. First, I needed a place to put my back up data. I used github for two reasons. I can use git to move files from one server to another when restoring, and I will have version control of my back up data. I created a private repository and cloned it to my dotCMS server.</p><code>git clone https://github.com/username/repository-name.git</code><p>Per the dotCMS documentation, I needed to backup a minimum of three things for a full restore: assets, plugins, and the database. So, I navigated to my back up repository, copied the assets and plugins into the repository, dumped the database into the repository, added and committed the files to version control, and pushed the changes to GitHub.</p><pre><code>cp -a /opt/dotcms/wwwroot/current/dotserver/dotCMS/assets/ .\ncp -a /opt/dotcms/wwwroot/current/dotserver/plugins/ .\nmysqldump -u root database-name &gt; outputfile.sql\ngit add -A .\ngit commit -m \"added back up data to repository\"\ngit push origin master</code></pre><p>Next, I needed to instantiate a micro server. The process was very similar to my post on getting started with dotCMS on AWS servers, but I used a micro instead of a medium. I followed the directions from dotCMS to re-install dotCMS, mostly. I started by running:</p><pre><code># connect to the aws instance\nssh -i ~/keys/your-key.pem ec2-user@{servers.amazon.public.ip}\n\n# set admin and update yum\nsudo -i\nyum update\n\n#install mysql\nyum install -y mysql55-server.x86_64\n\n#Start mysql and create database, db user and password\n/etc/init.d/mysqld start\n\nmysql\n&nbsp;CREATE USER 'dotcms2'@'localhost' IDENTIFIED BY 'some_password';\n&nbsp;CREATE USER 'dotcms2'@'127.0.0.1' IDENTIFIED BY 'some_password';\n&nbsp;GRANT ALL PRIVILEGES ON *.* TO 'dotcms2'@'127.0.0.1' WITH GRANT OPTION;\n&nbsp;GRANT ALL PRIVILEGES ON *.* TO 'dotcms2'@'localhost' WITH GRANT OPTION;\n&nbsp;CREATE DATABASE dotcms2 default character set = utf8 default collate = utf8_general_ci;\nexit;\n\n#create and switch to parent directory\nmkdir -p /opt/dotcms/wwwroot/dotcms-2.5.6\ncd /opt/dotcms/wwwroot/dotcms-2.5.6\n\n#get dotcms source zip for desired stable release version - this url changes frequently\nwget http://www.dotcms.com/physical_downloads/release_builds/dotcms_2.5.6.zip\nunzip dotcms_2.5.6.zip\ncd ../\nln -s /opt/dotcms/wwwroot/dotcms-2.5.6 /opt/dotcms/wwwroot/current\ncd current/dotserver/\n\n#change the /bin scripts permissions, add execution permission to *.sh in the bin directory\nchmod 755 ./bin/*.sh\nchmod 755 ./tomcat/bin/*.sh</code></pre><p>I did NOT run the following command because they are covered by the plugins back up.</p><pre><code>#Create ROOT Plugin Configuration Directories (Never directly edit dotCMS files as this will break on upgrade)\nmkdir -p plugins/com.dotcms.config/ROOT/tomcat/conf/Catalina/localhost/\nmkdir -p plugins/com.dotcms.config/ROOT/bin\ncp tomcat/conf/Catalina/localhost/ROOT.xml plugins/com.dotcms.config/ROOT/tomcat/conf/Catalina/localhost/\n\n#Copy startup.sh to root plugin\ncp bin/startup.sh plugins/com.dotcms.config/ROOT/bin\n\n#OPTIONAL- copy the server xml and configure ports for the Dotcms application\ncp tomcat/conf/server.xml plugins/com.dotcms.config/ROOT/tomcat/conf/\n\n#Then edit the server.xml file in your plugins directory and change the port on this line:\n#&lt;Connector maxThreads=\"75\" connectionTimeout=\"20000\" port=\"8080\" protocol=\"HTTP/1.1\" redirectPort=\"8443\"/&gt;\n\n#Configure db connection and dotCMS db name and password\n# comment the postgresql db,\n# UNCOMMENT the mysql db AND\n# change username to dotcms2 and password to what\n# you entered for 'some_password'\nvi plugins/com.dotcms.config/ROOT/tomcat/conf/Catalina/localhost/ROOT.xml\n\n# Change -Xmx for better heap size (recommend min 2 Gigs for testing)\nvi plugins/com.dotcms.config/ROOT/bin/startup.sh\n#The line in the startup.sh file looks like this:\n---\nJAVA_OPTS=\"$JAVA_OPTS -Djava.awt.headless=true -Xverify:none -Dfile.encoding=UTF8 -server -Xmx1G -XX:MaxPermSize=256m -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -javaagent:dotCMS/WEB-INF/lib/jamm-0.2.5.jar\"\n---</code>\n</pre><p>Instead, I copied the assets and plugins from my back up into my dotCMS. Then, complete the installation by:</p><pre><code>#deploy configuration plugin changes\n./bin/deploy-plugins.sh\n\n#start up dotcms and tail the log\ntouch tomcat/logs/dotcms.log\n./bin/startup.sh &amp;&amp; tail -f tomcat/logs/dotcms.log</code></pre><p>As dotCMS makes clear in their documentation, I needed to run a full re-index. This did not seem to suffice. But, stopping and starting dotCMS did the trick.</p><pre><code># shut down dotCMS\n./bin/shutdown.sh\n# wait for dotCMS to finish shutting down and restart\n./bin/startup.sh</code></pre><p><img src=\"blog-post/dotcms-backup-and-restore/9727369f-0c33-469f-9cfe-0f1e2f37f4ed.png\" width=\"1200\" height=\"797\" alt=\"re-index\" title=\"re-index\" /></p><p>Lastly, I needed to update my ip address on my record set (see below) and shut down my expensive medium AWS instance.</p><p><img src=\"blog-post/dotcms-backup-and-restore/d6626dd3-00bd-4102-bc0a-87c7799f11c3.png\" width=\"1200\" height=\"801\" alt=\"change record set\" title=\"record-set\" /></p>",
     "url":"dotcms-backup-and-restore"
   },
  {
    "title":"God the Son",
    "date":"October 31 2014",
    "body":"<h2 dir=\"ltr\">God the Son - Jesus</h2><h3 dir=\"ltr\">Who is Jesus?</h3><p dir=\"ltr\">He is God. John 8:58</p><p dir=\"ltr\">He is the Father's only Son. John 3:16</p><p dir=\"ltr\">He is the image of Invisible God. Colossians 1:15</p><h3 dir=\"ltr\">Where is Jesus?</h3><p dir=\"ltr\">He is in heaven at right hand of the Father. Mark 16:19, 1 Peter 3:22</p><h3 dir=\"ltr\">What is Jesus?</h3><p dir=\"ltr\">He is both God and man.</p><h4 dir=\"ltr\">How is Jesus both God and man - incarnate?</h4><p dir=\"ltr\">&ldquo;Remaining what he was, he became what he was not.&rdquo;</p><p dir=\"ltr\">He has a human body. Hebrews 2:14</p><p dir=\"ltr\">He has a human soul. Matthew 26:38, Hebrews 2:17-18, Galatians 4:4</p><p dir=\"ltr\">He is conceived of the Holy Spirit and the virgin Mary. Why is this important? Because sin entered all of mankind through Adam, we are born already sinners. Therefore, an immaculate conception - clean conception - was the only way for Jesus to come to earth as man without becoming sinful. Luke 1:31-35</p><p dir=\"ltr\">He stayed Holy like God the Father by remaining without sin. Hebrews 7:26</p><h3 dir=\"ltr\">What does Jesus do?</h3><h4 dir=\"ltr\">Prophet</h4><p dir=\"ltr\">He is the Word in the flesh. Christ completed the need for prophets by revealing to us - through his word - the will of God for our salvation.&nbsp;John 1:14,&nbsp;Deuteronomy 18:15-20, Acts 3:22, John 1:18, 1 Peter 1:11, Colossians 2:3</p><h4 dir=\"ltr\">Priest</h4><p dir=\"ltr\">He is the mediator between God and Man. Christ completed the need for priests by offering up a perfect sacrifice to satisfy divine justice. He reconcile us to God. And, He is making continual intercession for us.&nbsp;1 Timothy 2:5,&nbsp;1 Samuel 2:35, Hebrews 8:1, Hebrews 2:17, Hebrews 7:25</p><h4 dir=\"ltr\">King</h4><p dir=\"ltr\">He is the Redeemer and Conqueror. Christ completed the need for a king in ruling and defending us and in conquering our enemies.&nbsp;Colossians 1:13,&nbsp;2 Samuel 7:12-16, Matthew 1:1, Luke 1:33, John 18:36-37</p><hr /><p dir=\"ltr\"></p><div dir=\"ltr\"><table><colgroup><col width=\"156\" /><col width=\"156\" /><col width=\"156\" /><col width=\"156\" /></colgroup><tbody><tr><td></td><td><p dir=\"ltr\">Prophet</p></td><td><p dir=\"ltr\">Priest</p></td><td><p dir=\"ltr\">King</p></td></tr><tr><td><p dir=\"ltr\">Original Man</p></td><td><p dir=\"ltr\">Knowledge of God</p></td><td><p dir=\"ltr\">Righteousness</p></td><td><p dir=\"ltr\">Holiness</p></td></tr><tr><td><p dir=\"ltr\">Man after the Fall</p></td><td><p dir=\"ltr\">Ignorant - needed prophets</p></td><td><p dir=\"ltr\">Guilty - needed priests</p></td><td><p dir=\"ltr\">Sinful - needed kings</p></td></tr><tr><td><p dir=\"ltr\">Israel - God&rsquo;s chosen people</p></td><td><p dir=\"ltr\">Moses and other prophets</p></td><td><p dir=\"ltr\">Aaron and other priests</p></td><td><p dir=\"ltr\">David and other kings / judges</p></td></tr><tr><td><p dir=\"ltr\">Jesus Christ</p></td><td><p dir=\"ltr\">The Word</p></td><td><p dir=\"ltr\">The Sacrifice</p></td><td><p dir=\"ltr\">King of Kings</p></td></tr><tr><td><p dir=\"ltr\">Conversion</p></td><td><p dir=\"ltr\">Knowledge of Law and gospel is revealed</p></td><td><p dir=\"ltr\">Feeling the need of a sacrifice and sufficiency of it</p></td><td><p dir=\"ltr\">Willfully cease being a slave of sin and submit to Christ the King</p></td></tr><tr><td><p dir=\"ltr\">Church</p></td><td><p dir=\"ltr\">Word of God is taught</p></td><td><p dir=\"ltr\">Sacraments of baptism and communion</p></td><td><p dir=\"ltr\">Proper exercise of discipline</p></td></tr></tbody></table></div><hr /><h3 dir=\"ltr\">Discussion Questions</h3><h4 dir=\"ltr\">Why is it important Jesus be both God and man?</h4><p dir=\"ltr\">We need savior who is able to reach us and to reach God. This, Christ alone can do. He can do this because He is God and man, in two distinct natures, yet one person forever.</p><h4 dir=\"ltr\">Why is the incarnation of Christ an act of love?</h4><p dir=\"ltr\">Humiliation - born into the lowly condition of a man from the majesty of God. He had to submit to the law. He suffered miseries. He experienced the wrath of the Father. He accepted the curse of death. He remained under the power of death, for a time.&nbsp;Luke 2:7, Galatians 4:4,&nbsp;Isaiah 53:3,&nbsp;Mathew 27:46,&nbsp;Philippians 2:8,&nbsp;1 Corinthians 15:4</p><h4 dir=\"ltr\">What do we learn about Jesus in the Old Testament?</h4><p dir=\"ltr\">The entire Bible is about Jesus. It should change the way we read the Old Testament. We should always be looking at the offices of Prophet, Priest, King as a representation of Jesus to come or a representation of our need for Jesus to come.</p><h4 dir=\"ltr\">What are some of Christ&rsquo;s present activities on behalf of his Church?</h4><p dir=\"ltr\">He is preparing a place for us. John 14:3</p><p dir=\"ltr\">He intercedes for us. Hebrews 7:25</p><p dir=\"ltr\">He continues to fight our enemies. 1 Corinthians 15:25-26</p><h4 dir=\"ltr\">Which office that Jesus holds do you most see Him as?</h4><h4 dir=\"ltr\">Which office that Jesus holds do you need to accept more? How should this change the way you think or act?</h4>",
     "url":"god-the-son"
   },
  {
    "title":"Getting Started with DotCMS and Amazon Web Services",
    "date":"September 25 2014",
    "body":"<p>I am starting a website to put the things that I learn on the web. The first will be how to host my own website using&nbsp;<a href=\"http://aws.amazon.com/\" title=\"Amazon Web Services Link\" target=\"_blank\">Amazon Web Services</a>&nbsp;and <a href=\"http://dotcms.com/\" title=\"dotCMS\" target=\"_blank\">dotCMS</a>. I chose AWS because it offers a lot of flexibility and customization (learning opportunities), and I chose dotCMS because we use it at work and I want to get as familiar with it as possible.</p><p>Using the&nbsp;<a href=\"http://dotcms.com/docs/latest/amazonLinuxEc2DotcmsRecipe\" title=\"tutorial\" target=\"_blank\">tutorial</a>&nbsp;from dotCMS I was able to create a AWS&nbsp;<a href=\"http://aws.amazon.com/ec2/\" title=\"ec2\">EC2</a>&nbsp;instance, get dotCMS up and running, and associate my domain name&nbsp;(<a href=\"http://austindlawless.com/\" title=\"austindlawless.com\" target=\"_blank\">austindlawless.com</a>)&nbsp;with the public ip address.</p><p>I chose the&nbsp;Amazon Linux AMI 2014.03.2 (HVM) as my operating system.</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/5c4b6c91-1ba3-4a9b-8ebc-3eb43da2d1e0.png\" width=\"1200\" height=\"776\" alt=\"operating system choice\" /></p><p>I used a m3.meduim instance (3.75GB memory).</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/204b0e5c-f202-4dce-8097-4685c8ef9d30.png\" width=\"1200\" height=\"801\" alt=\"aws instance size\" /></p><p>I&nbsp;increased the default 8GB of disk space to&nbsp;20GB.</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/ad11d152-bdb8-45fa-b600-141e893b27dd.png\" width=\"1200\" height=\"801\" alt=\"upgrade memory\" /></p><p>I opened up ssh and html on my server with these two security group rules.</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/86b0c34d-f451-4cf3-b536-f625df6fc268.png\" width=\"1200\" height=\"801\" alt=\"set security groups\" /></p><p>Once I had the AWS instance up. I connected to it via ssh and followed the <a href=\"http://dotcms.com/docs/latest/amazonLinuxEc2DotcmsRecipe\" title=\"dotCMS aws instructions\" target=\"_blank\">instructions</a> given by dotCMS with one update. The version given is 2.5.4, but it is no longer available. So, I went to the downloads page and clicked the drop down for the community edition. I replaced the 2.5.4 version using the version number from the 'Linux / OSX / Unix' line, 2.5.6.</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/0e6afd4e-6548-4b5c-8f2a-7749158f07b0.png\" width=\"1200\" height=\"766\" alt=\"check for current downloads\" /></p><p><code>wget http://www.dotcms.com/physical_downloads/release_builds/dotcms_2.5.4.zip</code></p><p>became</p><p><code>wget http://www.dotcms.com/physical_downloads/release_builds/dotcms_2.5.6.zip</code></p><p>Once I had dotCMS running on the AWS instance I needed to get my domain name translated to my public ip address (54.86.67.18). So, I went to set up my Amazon&nbsp;<a href=\"http://aws.amazon.com/route53/\" title=\"route 53\" target=\"_blank\">Route53</a>&nbsp;service. First, I created a Hosted Zone for my domain.</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/50f13388-3e7d-42e3-ad18-bc2142cdafea.png\" width=\"1200\" height=\"801\" alt=\"create a hosted zone\" /></p><p>The delegation set toward the right of the screen shot needed to be entered as the name servers for my domain at <a href=\"http://www.godaddy.com/\" title=\"go daddy\" target=\"_blank\">godaddy</a>. I also needed to add my public ip address as a record set for the hosted zone.</p><p><img src=\"blog-post/getting-started-with-dotcms-and-amazon-web-services/ed40de28-0e66-41cb-ac86-f3db20532a45.png\" width=\"1200\" height=\"801\" alt=\"create a record for ip address\" /></p><p>The name is defaulted to the domain for the hosted zone, austindlawless.com. That is what I want. The type should be 'A - IPv4 address'. And, I need to add my pubic ip for my server as the value.</p><p>Once that was done and I waited about 20 minutes, everything worked. Now that I've got the server connections all set up, I need to learn how to make my site look reasonable.</p>",
     "url":"getting-started-with-dotcms-and-amazon-web-services"
   }
]